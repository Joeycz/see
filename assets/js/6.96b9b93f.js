(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{222:function(t,e,r){t.exports=r.p+"assets/img/ctrlp-vim-demo.ae029e4b.gif"},223:function(t,e,r){t.exports=r.p+"assets/img/NERD_tree.4e024575.gif"},224:function(t,e,r){t.exports=r.p+"assets/img/omni_complete.12f7ba08.png"},225:function(t,e,r){t.exports=r.p+"assets/img/vim_complete.0fc1b37a.png"},226:function(t,e,r){t.exports=r.p+"assets/img/example1.495f03e3.gif"},227:function(t,e,r){t.exports=r.p+"assets/img/example3.51b56aae.gif"},240:function(t,e,r){"use strict";r.r(e);var n=r(0),v=Object(n.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("作为一名开发者，应该对编辑器之神Vim与神之编辑器Emacs有所耳闻吧。编辑器之战的具体细节有兴趣的童鞋可以google之。")]),t._v(" "),n("p",[t._v("Vim最大的特点是打开速度快，功能强大，一旦掌握了其中的命令，编程过程双手就不需要离开键盘了。")]),t._v(" "),n("p",[t._v("用习惯了Vim的另一个好处是在linux下可以很轻松地用vi来处理文件，当然emacs也可以做默认编辑器，但是不是每台机器都有安装Emacs。")]),t._v(" "),n("p",[t._v("今天主要给大家介绍Vim在前端领域的一些常用插件：")]),t._v(" "),n("p",[t._v("##1、mark.vim\n"),n("a",{attrs:{href:"http://www.vim.org/scripts/script.php?script_id=1238",target:"_blank",rel:"noopener noreferrer"}},[t._v("mark.vim"),n("OutboundLink")],1),t._v("主要的功能是变量的高亮。")]),t._v(" "),n("p",[t._v("选中要高亮的词，使用 \\m 来使其高亮，多个词的高亮会显示为不同的颜色，在不需要查找的时候以及代码review的时候使用效果还是挺不错的，\n使用 \\n 可以去除所选的词的高亮。\n更多详情可以点击插件主页了解。")]),t._v(" "),n("p",[t._v("PS: "),n("em",[t._v("查找单词可以使用 * 这个命令来进行快速搜索")])]),t._v(" "),n("p",[t._v("##2、zencoding.vim\n"),n("a",{attrs:{href:"http://www.vim.org/scripts/script.php?script_id=2981",target:"_blank",rel:"noopener noreferrer"}},[t._v("zencoding.vim"),n("OutboundLink")],1),t._v("后来改名为Emmet.vim，主要功能是实现代码的快速编写。")]),t._v(" "),n("p",[t._v("具体教程可以参见"),n("a",{attrs:{href:"https://raw.githubusercontent.com/mattn/emmet-vim/master/TUTORIAL",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方的网站"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("个人感受是做页面重构的时候用得比较多，通过命令可以快速生成html的结构，提高了前端开发的生产力。")]),t._v(" "),n("p",[t._v("##3、ctrlp.vim\n"),n("a",{attrs:{href:"http://kien.github.io/ctrlp.vim/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctrlp.vim"),n("OutboundLink")],1),t._v("主要功能是对文件以及buffer进行模糊查询，快速打开文件。")]),t._v(" "),n("p",[t._v("操作实例如下图所示："),n("br")]),t._v(" "),n("p",[n("img",{attrs:{src:r(222),alt:"ctrlp.vim"}})]),t._v(" "),n("p",[t._v("在知道文件名的情况下，使用 ctrl + p 打开此插件，输入文件名，实则是文件名开头几个字母就可以快速打开文件。")]),t._v(" "),n("p",[t._v("PS：如果当前的文件已经保存好，那么会直接替换成搜索到的文件，如果没有保存的，会进行窗口的分隔类似与sp的命令。")]),t._v(" "),n("p",[t._v("所以在对比文件的情况下一般会用vsp来分割窗口或者tabnew一个新的tab，再打开新的文件。")]),t._v(" "),n("p",[t._v("如果需要查其他目录或者忘记了文件名的话，就可以使用下面的插件NERD_tree了。")]),t._v(" "),n("p",[t._v("##4、NERD_tree.vim\n"),n("a",{attrs:{href:"http://www.vim.org/scripts/script.php?script_id=1658",target:"_blank",rel:"noopener noreferrer"}},[t._v("NERD_tree.vim"),n("OutboundLink")],1),t._v("主要功能是一款文件浏览器，可以查看文件目录结构打开相应的文件。")]),t._v(" "),n("p",[t._v("具体演示如下图所示:")]),t._v(" "),n("p",[n("img",{attrs:{src:r(223),alt:"NERD_tree.vim"}})]),t._v(" "),n("p",[t._v("使用绑定的快捷键F4来打开文件浏览器，光标在文件浏览器中可以用jk来移动，回车键可以打开文件，按q可以退出文件浏览器。")]),t._v(" "),n("p",[t._v("##5、neocomplcache.vim\n"),n("a",{attrs:{href:"https://github.com/Shougo/neocomplcache.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("neocomplcache.vim"),n("OutboundLink")],1),t._v("主要功能是进行代码补全，优点是对上下文进行索引，结果保存到缓存中，自动补全的效率比较高，另外匹配的也比较精准。")]),t._v(" "),n("p",[t._v("补全效果如下图展示：")]),t._v(" "),n("p",[n("img",{attrs:{src:r(224),alt:"NERD_tree.vim"}})]),t._v(" "),n("p",[n("img",{attrs:{src:r(225),alt:"NERD_tree.vim"}})]),t._v(" "),n("p",[t._v("Vim中的代码补全插件比较多，一般补全的智能性依赖于插件的字典，变量缓存机制。")]),t._v(" "),n("p",[t._v("从这点看neocomplcache也是挺不错的，另外智能读读取路径的功能也是挺赞的。")]),t._v(" "),n("p",[t._v("##6、multiple_cursors.vim\n"),n("a",{attrs:{href:"https://github.com/terryma/vim-multiple-cursors",target:"_blank",rel:"noopener noreferrer"}},[t._v("multiple_cursors.vim"),n("OutboundLink")],1),t._v("的主要功能是多光标多行编辑。")]),t._v(" "),n("p",[t._v("主要效果可以见下面的图片：")]),t._v(" "),n("p",[n("img",{attrs:{src:r(226),alt:"NERD_tree.vim"}})]),t._v(" "),n("p",[n("img",{attrs:{src:r(227),alt:"NERD_tree.vim"}})]),t._v(" "),n("p",[t._v("在没有这款插件前，原生命令一般是进行块操作，在可视模式下对多行进行操作。步骤比较冗长，也容易出错，这款插件可真谓利器啊，同时它还支持正则的操作。")]),t._v(" "),n("p",[t._v("##7、commentary.vim\n"),n("a",{attrs:{href:"https://github.com/tpope/vim-commentary",target:"_blank",rel:"noopener noreferrer"}},[t._v("commentary.vim"),n("OutboundLink")],1),t._v("主要功能是可以批量注释单行或多行以及去除注释;绑定退格键，选择多行可以直接以/**/的形式注释代码。")]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("最后，几款插件都是在前端开发中经常用到的，还有很多功能，原生的一些命令还是可以做的，另外用Vim还有一个好处是从写C到写PHP再到写JS，都可以用同一个编辑器，还是挺方便的。快捷键神马的自己在vimrc中配置即可，打造自己的IDE的过程虽然折腾，但是之后使用的过程还是挺爽的。")]),t._v(" "),n("hr"),t._v(" "),n("p",[n("em",[t._v("转载自：")]),n("a",{attrs:{href:"http://www.alloyteam.com/2013/12/front-end-development-tools-vim-introduce-common-plug-ins/?replytocom=34296&wpmp_switcher=mobile",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.alloyteam.com/2013/12/front-end-development-tools-vim-introduce-common-plug-ins/?replytocom=34296&wpmp_switcher=mobile"),n("OutboundLink")],1)])])},[],!1,null,null,null);e.default=v.exports}}]);